name: main chat-room machine
keep_memory: true
initial:
  sends:
    # this is quite a random aka unnesessary because this executed only when machine is just started
    - data: Hello Dude! Long time no see! In room mode.
      protocol: basic_message
  target: ROOM_LOOP
states:
  ECHO_LOOP:
    transitions:
    - trigger:
        data: reset
        protocol: basic_message
        rule: INPUT_EQUAL
      sends:
      - data: Going to beginning.
        protocol: basic_message
      target: ROOM_LOOP
    - trigger:
        data: stop
        protocol: basic_message
        rule: INPUT_EQUAL
      sends:
      - data: Going to end.
        protocol: basic_message
      target: TERMINATE

    # forward BM -> b-fsm
    # b-fsm will annotate the message
    - trigger:
        data: LINE
        protocol: basic_message
        rule: INPUT_SAVE
      sends:
      - data: session {{.SESSION_ID}} with {{.CALLSIGN}} says {{.LINE}}
        protocol: backend
        rule: FORMAT_MEM
      target: ECHO_LOOP

    # handle incoming from b-fsm and send it as BM to PW end
    # b-fsm is annotated the message by adding nome notes to it
    - trigger:
        protocol: backend
        rule: INPUT
      sends:
      - protocol: basic_message
        rule: INPUT
      target: ECHO_LOOP

  ROOM_LOOP:
    transitions:
    - sends:
      - data: |-
          ---------------------
          Say: help, and I'll show this message.
          Say: <sessionID>, select sessionID and i store it.
          Say: continue, and I'll go the next cmd mode.
        protocol: basic_message
      target: ROOM_LOOP
      trigger:
        data: help
        protocol: basic_message
        rule: INPUT_EQUAL

    - trigger:
        data: continue
        protocol: basic_message
        rule: INPUT_EQUAL
      target: CMD_LOOP
      sends:
      - data: Going CMD mode...
        protocol: basic_message

    - sends:
      - data: Your sessionID is {{.SESSION_ID}}. Going CMD mode..
        protocol: basic_message
        rule: FORMAT_MEM
      target: CMD_LOOP
      trigger:
        protocol: basic_message
        rule: INPUT_SAVE_SESSION_ID

  CMD_LOOP:
    transitions:
    - sends:
      - data: Going to end.
        protocol: basic_message
      trigger:
        data: stop
        protocol: basic_message
        rule: INPUT_EQUAL
      target: TERMINATE
    - sends:
      - data: Let's go!
        protocol: basic_message
      target: ECHO_LOOP
      trigger:
        data: run
        protocol: basic_message
        rule: INPUT_EQUAL
    - sends:
      - data: |-
          ---------------------
          Hello! I'm chat-room bot.
          Say: run, and I'start.
          Say: reset, and I'll go beginning.
          Say: help, and I'll show this message.
          Say: <callsign>, select call sign and i store it.
          Say: stop, and I'll go end and terminate FSM.
        protocol: basic_message
      target: CMD_LOOP
      trigger:
        data: help
        protocol: basic_message
        rule: INPUT_EQUAL
    - sends:
      - data: Your call sing is {{.CALLSIGN}}.
        protocol: basic_message
        rule: FORMAT_MEM
      target: CMD_LOOP
      trigger:
        data: CALLSIGN
        protocol: basic_message
        rule: INPUT_SAVE
  TERMINATE:
    terminate: true
